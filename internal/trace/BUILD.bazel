load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "trace",
    srcs = [
        "attributes.go",
        "buckets.go",
        "context.go",
        "fields.go",
        "httptrace.go",
        "logger.go",
        "otel_bridge.go",
        "trace.go",
        "tracer.go",
        "url.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/internal/trace",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/conf/conftypes",
        "//internal/env",
        "//internal/trace/ot",
        "//internal/trace/policy",
        "//lib/errors",
        "@com_github_cockroachdb_redact//:go_default_library",
        "@com_github_felixge_httpsnoop//:go_default_library",
        "@com_github_gorilla_mux//:go_default_library",
        "@com_github_keegancsmith_sqlf//:go_default_library",
        "@com_github_opentracing_opentracing_go//:go_default_library",
        "@com_github_opentracing_opentracing_go//ext:go_default_library",
        "@com_github_opentracing_opentracing_go//log:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promauto:go_default_library",
        "@com_github_sourcegraph_log//:go_default_library",
        "@io_opentelemetry_go_otel//:go_default_library",
        "@io_opentelemetry_go_otel//attribute:go_default_library",
        "@io_opentelemetry_go_otel//codes:go_default_library",
        "@io_opentelemetry_go_otel_trace//:go_default_library",
        "@org_golang_x_net//trace:go_default_library",
    ],
)
