// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gitlab

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// validateTokenCurrentUser includes the requested fields of the GraphQL type User.
type validateTokenCurrentUser struct {
	// Username of the user. Unique within this instance of GitLab
	Username string `json:"username"`
}

// GetUsername returns validateTokenCurrentUser.Username, and is useful for accessing the field via an interface.
func (v *validateTokenCurrentUser) GetUsername() string { return v.Username }

// validateTokenResponse is returned by validateToken on success.
type validateTokenResponse struct {
	// Get information about current user
	CurrentUser validateTokenCurrentUser `json:"currentUser"`
}

// GetCurrentUser returns validateTokenResponse.CurrentUser, and is useful for accessing the field via an interface.
func (v *validateTokenResponse) GetCurrentUser() validateTokenCurrentUser { return v.CurrentUser }

func validateToken(
	ctx context.Context,
	client graphql.Client,
) (*validateTokenResponse, error) {
	req := &graphql.Request{
		OpName: "validateToken",
		Query: `
query validateToken {
	currentUser {
		username
	}
}
`,
	}
	var err error

	var data validateTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
