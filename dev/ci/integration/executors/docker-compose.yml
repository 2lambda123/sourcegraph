version: '2.4'
networks:
  sourcegraph:
services:
  server:
    container_name: server
    image: '${SERVER_IMAGE}'
    environment:
      DEBUG: t
      SRC_LOG_LEVEL: dbug
      ALLOW_SINGLE_DOCKER_CODE_INSIGHTS: t
      # TODO @jhchabran
      # SOURCEGRAPH_LICENSE_GENERATION_KEY: "${SOURCEGRAPH_LICENSE_GENERATION_KEY}"
      SITE_CONFIG_FILE: /e2e/site-config.json
    volumes:
      - '${DATA}/config:/etc/sourcegraph'
      - '${DATA}/data:/var/opt/sourcegraph'
      - './config:/e2e'
    expose:
      - '7080'
    ports:
      - '7080:7080'
    networks:
      - sourcegraph
  executor:
    container_name: executor
    image: '${EXECUTOR_IMAGE}'
    # Run as root (required for docker daemon control).
    user: root
    # Run with privileged capabilities (required for docker daemon control).
    privileged: true
    environment:
      # Note: Must match `executors.frontendURL` in site config
      - EXECUTOR_FRONTEND_URL=http://server:7080
      # Note: Must match `executors.accessToken` in site config
      - EXECUTOR_FRONTEND_PASSWORD=${EXECUTOR_FRONTEND_PASSWORD}
      - EXECUTOR_QUEUE_NAME=batches
      # Note: Must match left-hand side of scratch volume mount
      - EXECUTOR_DOCKER_HOST_MOUNT_PATH=${TMP_DIR}
      # Note: Must match right-hand side of scratch volume mount
      - TMPDIR=/scratch
      # Run as root (required for docker daemon control)
      - UID=1000
      - GID=1000
    volumes:
      # Mount docker socket
      - '/var/run/docker.sock:/var/run/docker.sock'
      # Mount volume for workspaces shared by executor and launched containers
      - '${TMP_DIR}:/scratch'
    networks:
      - sourcegraph
