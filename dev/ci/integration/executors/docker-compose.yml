version: '2.4'
networks: 
  sourcegraph:
services:
  server: 
    container_name: server
    # TODO @jhchabran
    image: "index.docker.io/sourcegraph/server:insiders@sha256:e8e53784bac3c0f805733f640916395e14d24260ec64195b249d3b03dd1dde19"
    environment: 
      DEBUG: t
      SRC_LOG_LEVEL: dbug
      ALLOW_SINGLE_DOCKER_CODE_INSIGHTS: t 
      # TODO @jhchabran
      # SOURCEGRAPH_LICENSE_GENERATION_KEY: "${SOURCEGRAPH_LICENSE_GENERATION_KEY}"
      SITE_CONFIG_FILE: /e2e/site-config.json
    volumes:
      - "${DATA}/config:/etc/sourcegraph"
      - "${DATA}/data:/var/opt/sourcegraph"
      - "./config:/e2e"
    expose:
      - "7080"
    ports: 
      - "7080:7080"
    networks:
      - sourcegraph
  executor:
    container_name: executor
    # TODO @jhchabran
    image: 'us.gcr.io/sourcegraph-dev/executor:0577e371711c5d4c68bb7553f630bc617798dc48_185100_candidate' # TODO
    cpus: 1
    mem_limit: '4g'
    # Run as root (required for docker daemon control)
    user: root
    # Run with privileged capabilities (required for docker daemon control)
    privileged: true
    environment:
      # Note: Must match `executors.frontendURL` in site config
      - EXECUTOR_FRONTEND_URL=http://server:7080
      # Note: Must match `executors.accessToken` in site config
      - EXECUTOR_FRONTEND_PASSWORD=hunter2hunter2hunter2
      # Choose what work to process
      - EXECUTOR_QUEUE_NAME=codeintel
      # Note: Must match left-hand side of scratch volume mount
      - EXECUTOR_DOCKER_HOST_MOUNT_PATH=/tmp/foobar/executor-scratch
      # Note: Must match right-hand side of scratch volume mount
      - TMPDIR=/scratch
      # Run as root (required for docker daemon control)
      - UID=1000
      - GID=1000
    volumes:
      # Mount docker socket
      - '/var/run/docker.sock:/var/run/docker.sock'
      # Mount volume for workspaces shared by executor and launched containers
      - '/tmp/foobar/executor-scratch:/scratch'
    networks:
      - sourcegraph
    restart: always
