---
source: crates/sg-syntax/src/sg_sciptect.rs
assertion_line: 554
expression: "dump_document(&document, &contents)"
---
  function $initHighlight(block, cls) {
//^^^^^^^^ IdentifierType
//         ^^^^^^^^^^^^^^ IdentifierFunction
//                        ^^^^^ Identifier
//                               ^^^ Identifier
    try {
//  ^^^ Keyword
      if (cls.search(/\bno\-highlight\b/) != -1)
//    ^^ Keyword
//        ^^^ Identifier
//            ^^^^^^ Identifier
//                   ^ StringLiteral
//                    ^^ Keyword
//                      ^^ StringLiteral
//                        ^^ StringLiteralEscape
//                          ^^^^^^^^^ StringLiteral
//                                   ^^ Keyword
//                                     ^ StringLiteral
//                                        ^^ IdentifierOperator
//                                           ^ IdentifierOperator
//                                            ^ NumericLiteral
        return process(block, true, 0x0F) +
//      ^^^^^^ Keyword
//                     ^^^^^ Identifier
//                            ^^^^ IdentifierBuiltin
//                                  ^^^^ NumericLiteral
//                                        ^ IdentifierOperator
               ` class="${cls}"`;
//             ^^^^^^^^^ StringLiteral
//                        ^^^ Identifier
//                            ^^ StringLiteral
//                              ^ PunctuationDelimiter
    } catch (e) {
//    ^^^^^ Keyword
//           ^ Identifier
      /* handle exception */
//    ^^^^^^^^^^^^^^^^^^^^^^ Comment
    }
    for (var i = 0 / 2; i < classes.length; i++) {
//  ^^^ Keyword
//       ^^^ IdentifierType
//           ^ Identifier
//             ^ IdentifierOperator
//               ^ NumericLiteral
//                 ^ IdentifierOperator
//                   ^ NumericLiteral
//                      ^ Identifier
//                        ^ IdentifierOperator
//                          ^^^^^^^ Identifier
//                                          ^ Identifier
//                                           ^^ IdentifierOperator
      if (checkCondition(classes[i]) === undefined)
//    ^^ Keyword
//        ^^^^^^^^^^^^^^ Identifier
//                       ^^^^^^^ Identifier
//                               ^ Identifier
//                                   ^^^ IdentifierOperator
//                                       ^^^^^^^^^ IdentifierBuiltin
        console.log('undefined');
//                  ^^^^^^^^^^^ StringLiteral
//                              ^ PunctuationDelimiter
    }
  
    return (
//  ^^^^^^ Keyword
      <div>
        <web-component>{block}</web-component>
//                      ^^^^^ Identifier
      </div>
    )
  }
  
  export  $initHighlight;
//^^^^^^ Keyword
//        ^^^^^^^^^^^^^^ Identifier
//                      ^ PunctuationDelimiter

